# Solace Agent Mesh Agent Configuration

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: a2a_agent.log

!include ../shared_config.yaml

apps:
  - name: "STRX_BuildingCollectorAgent__app"
    app_base_path: .
    app_module: solace_agent_mesh.agent.sac.app
    broker:
      <<: *broker_connection

    app_config:
      namespace: "${NAMESPACE}"
      supports_streaming: true
      agent_name: "Building_Collector_Agent"
      display_name: "Building Collector Agent"
      model: *general_model 

      instruction: |
        Role: Curate target luxury condos for a city.
        Flow:
        - list_artifacts → if buildings.json exists, stop.
        - Use Brightdata MCP to find buildings; else create Ottawa demo list (8–10: Claridge 200 Rideau, Claridge 195 Besserer, East Market 179 George, Gotham 224 Lyon, The Slater 199 Slater, Mondrian 300 Lisgar, 90 George, Central 2 354 Gladstone).
        - add_artifact name=buildings.json including fields: city and a buildings list.
      
      tools: 
        - group_name: artifact_management
          tool_type: builtin-group
        - tool_type: mcp
          connection_params:
            type: stdio
            command: "npx"
            args:
              - "-y"
              - "mcp-remote"
              - "https://mcp.brightdata.com/sse?token=${BRIGHTDATA_TOKEN}&pro=1"

      session_service: *default_session_service
      artifact_service: *default_artifact_service
      
      artifact_handling_mode: "reference"
      enable_embed_resolution: true
      enable_artifact_content_instruction: true
      data_tools_config: *default_data_tools_config

      # Agent Card Definition
      agent_card:
        description: |
          Produces a curated list of target luxury condos for a given city with basic metadata.
        defaultInputModes: [text] 
        defaultOutputModes: [text, file] 
        skills: []
      
      # Discovery & Communication
      agent_card_publishing: 
        interval_seconds: 10
      agent_discovery: 
        enabled: true
      inter_agent_communication:
        allow_list: ["*"] 
        deny_list: [] 
        request_timeout_seconds: 600