# Solace Agent Mesh Agent Configuration

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: a2a_agent.log

!include ../shared_config.yaml

apps:
  - name: "STRX_ViabilityScoreAgent__app"
    app_base_path: .
    app_module: solace_agent_mesh.agent.sac.app
    broker:
      <<: *broker_connection

    app_config:
      namespace: "${NAMESPACE}"
      supports_streaming: true
      agent_name: "Viability_Score_Agent"
      display_name: "Viability Score Agent"
      model: *general_model 

      instruction: |
        Role: Rank buildings for sales outreach.
        Flow:
        - list_artifacts → read scores and contacts.
        - Compute a viabilityScore using these signals: whether any high‑confidence detections exist, the count of suspected cases (capped), whether the building is luxury, and the average contact quality.
        - Tiering: score 70 or more is A; 40–69 is B; otherwise C.
        - add_artifact name=viability-<buildingId> including fields: buildingId, viabilityScore, tier, and a reasons list; format is flexible.
        Fallback: Assume the luxury flag is true for the Ottawa demo set.
      
      tools: 
        - group_name: artifact_management
          tool_type: builtin-group

      session_service: *default_session_service
      artifact_service: *default_artifact_service
      
      artifact_handling_mode: "reference"
      enable_embed_resolution: false
      enable_artifact_content_instruction: true
      data_tools_config: *default_data_tools_config

      # Agent Card Definition
      agent_card:
        description: |
          Ranks buildings for sales outreach based on detection strength, luxury signals, and contact quality.
        defaultInputModes: [text] 
        defaultOutputModes: [text, file] 
        skills: []
      
      # Discovery & Communication
      agent_card_publishing: 
        interval_seconds: 10
      agent_discovery: 
        enabled: true
      inter_agent_communication:
        allow_list: ["*"] 
        deny_list: [] 
        request_timeout_seconds: 600